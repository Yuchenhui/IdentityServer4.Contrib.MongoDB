# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - dev
    - master
    - feature/*
    - features/*
    - bugs/*
    - defects/*

pool:
  name: 'default'

steps:
- powershell: |
    $buildnumber ='$Env:BUILD_BUILDNUMBER = "'+ (Get-Date).tostring("yyyy.MM.dd.") + $env:BUILD_BUILDID + '"'
    $buildUpdate ="##vso[build.updatebuildnumber]" + (Get-Date).tostring("yyyy.MM.dd.") + $env:BUILD_BUILDID
    Write-Host  $buildUpdate
    Write-Host  $buildnumber  
  name: ArtifactVariables
  displayName: Calculate Variables

- task: UseDotNet@2
  displayName: Set Dotnet Core Version
  inputs:
    packageType: 'sdk'
    version: '5.x'
    includePreviewVersions: true
 
- task: NuGetToolInstaller@1
  displayName: Update Nuget Tools
  inputs:
    versionSpec: '5.0.2'
    checkLatest: true

- task: DotNetCoreCLI@2
  displayName: Restore Packages
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: '67eba9e9-dde3-48ff-94d7-38d734620dd7'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: Create release
  inputs:
    command: 'build'
    arguments: '--configuration Release /p:AssemblyVersion=$(Build.BuildNumber)'

     
- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: 'test'
    projects: '**\*.Tests.csproj'
    arguments: '--configuration Release'
 
- task: DotNetCoreCLI@2 
  displayName: Create Nuget Packages
  condition: succeeded()
  inputs:
    command: 'pack'
    includesymbols: true
    configuration: Release
    versioningScheme: 'byBuildNumber'

- task: NuGetCommand@2
  displayName: Push Nuget Packages
  condition: succeeded()
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '67eba9e9-dde3-48ff-94d7-38d734620dd7'
    allowPackageConflicts: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    
